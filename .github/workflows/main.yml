name: Android Build and Release

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: ['arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64', 'universal']

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build APK
      run: ./gradlew assembleRelease -PabiFilters=${{ matrix.arch }}

    - name: Upload APK to Staging Area
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.arch }}.apk
        path: path/to/your/apk/output/${{ matrix.arch }}/*-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    steps:
    - name: Download APKs from Staging Area
      uses: actions/download-artifact@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: Description of the release
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.arch }}.apk
        asset_name: ${{ matrix.arch }}.apk
        asset_content_type: application/vnd.android.package-archive
